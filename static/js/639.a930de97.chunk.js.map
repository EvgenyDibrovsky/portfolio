{"version":3,"file":"static/js/639.a930de97.chunk.js","mappings":"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","sources":["components/MetaTags/MetaTags.jsx","components/Modal/Modal.jsx","components/Utility/AnimateElements.jsx","components/Utility/PageTitle.jsx","components/Utility/SubTitle.jsx","components/Utility/WrapperTitle.jsx","components/Certificates/CertificatesListItem.jsx","components/Certificates/CertificatesList.jsx","../node_modules/react-circular-progressbar/src/constants.ts","../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/buildStyles.ts","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx","components/TechSkills/TechSkills.jsx","components/TechSkills/TechSkillsIndicators.jsx","components/LangSkillsProgressBar/LangSkillsProgressBar.jsx","components/SoftSkills/SoftSkills.jsx","pages/Resume.jsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nconst MetaTags = ({ metaTitle, metaDescription }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <Helmet>\n      <html lang={i18n.language} />\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n    </Helmet>\n  );\n};\n\nexport default MetaTags;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BsXLg, BsChevronLeft, BsChevronRight } from 'react-icons/bs';\n\nexport default function Modal({ closeModal, children, width = 'max-w-[28rem]', backgroundImage = null, showChevrons = false, handleNext, handlePrev, current, total }) {\n  const backdropStyle = backgroundImage ? { backgroundImage: `url(${process.env.PUBLIC_URL + backgroundImage})` } : {};\n\n  useEffect(() => {\n    document.body.classList.add('overflow-y-hidden');\n    const handleKeyDown = e => {\n      if (e.keyCode === 27) {\n        closeModal();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.body.classList.remove('overflow-y-hidden');\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  const modalContent = (\n    <div className=\"fixed h-full overflow-y-auto inset-0 flex items-center justify-center bg-bgModal z-50 backdrop-blur-sm bg-cover bg-center bg-fixed\" onClick={closeModal} style={backdropStyle}>\n      <div className={`relative w-11/12 ${width} rounded-md duration-200`} onClick={e => e.stopPropagation()}>\n        <div className=\"flex items-center justify-between bg-transparent mb-2\">\n          {showChevrons && (\n            <div className=\"flex gap-2\">\n              <div className={`cursor-pointer flex items-center justify-between group ${current === 1 ? 'opacity-30' : ''}`}>\n                <BsChevronLeft className=\"w-8 h-8 p-1 text-white dark:text-white font-bold duration-200 group-hover:scale-75\" onClick={handlePrev} />\n              </div>\n              <div className={`cursor-pointer flex items-center justify-between group ${current === total ? 'opacity-30' : ''}`}>\n                <BsChevronRight className=\"w-8 h-8 p-1 text-white dark:text-white font-bold duration-200 group-hover:scale-75\" onClick={handleNext} />\n              </div>\n              <div className=\"flex items gap-2 text-white dark:text-white h-8 py-1 px-4\">\n                <div>{current}</div>\n                <div>/</div>\n                <div>{total}</div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"cursor-pointer flex items-center justify-between ml-auto group\">\n            <BsXLg className=\"w-8 h-8 p-1 text-white dark:text-white font-bold duration-200 group-hover:scale-75\" onClick={closeModal} />\n          </div>\n        </div>\n        <div className=\"bg-white  dark:bg-black text-black dark:text-white\">{children}</div>\n      </div>\n    </div>\n  );\n\n  return ReactDOM.createPortal(modalContent, document.getElementById('modal-root'));\n}\n","import React, { useEffect, useRef } from 'react';\n\nconst AnimateElements = ({ children }) => {\n  const elementsRef = useRef(null);\n\n  useEffect(() => {\n    const elements = elementsRef.current.querySelectorAll('.init-animate-1, .init-animate-2, .init-animate-3, .init-animate-4, .init-animate-5');\n\n    function onEntry(entries) {\n      entries.forEach(entry => {\n        const target = entry.target;\n        if (entry.isIntersecting) {\n          let animateClass;\n          let duration = target.getAttribute('data-time') || '1s';\n          let delay = target.getAttribute('data-delay') || '0s';\n          let delayInMilliseconds = parseFloat(delay) * 1000;\n\n          if (target.classList.contains('init-animate-1')) {\n            animateClass = 'animate-animate-1';\n          } else if (target.classList.contains('init-animate-2')) {\n            animateClass = 'animate-animate-2';\n          } else if (target.classList.contains('init-animate-3')) {\n            animateClass = 'animate-animate-3';\n          } else if (target.classList.contains('init-animate-4')) {\n            animateClass = 'animate-animate-4';\n          } else if (target.classList.contains('init-animate-5')) {\n            animateClass = 'animate-animate-5';\n          }\n\n          if (animateClass) {\n            target.classList.remove('not-animated');\n            target.style.animationDuration = duration;\n\n            setTimeout(() => {\n              target.classList.remove('opacity-0');\n              target.classList.add(animateClass);\n            }, delayInMilliseconds);\n          }\n        }\n      });\n    }\n\n    const observer = new IntersectionObserver(onEntry, {\n      threshold: 0.1,\n      rootMargin: '0px 0px -5% 0px',\n    });\n\n    elements.forEach(element => {\n      element.classList.add('not-animated');\n      observer.observe(element);\n    });\n\n    return () => {\n      elements.forEach(element => observer.unobserve(element));\n    };\n  }, []);\n\n  return <div ref={elementsRef}>{children}</div>;\n};\n\nexport default AnimateElements;\n","import React from 'react';\n\nexport default function PageTitle({ icon, title }) {\n  const IconComponent = icon\n    ? React.cloneElement(icon, {\n        className: 'text-iconColor dark:text-iconColorDark w-6 h-6',\n      })\n    : null;\n\n  return (\n    <div className=\"sm:w-full flex items-center gap-4\">\n      {IconComponent && <div className=\"animate-iconTitle\">{IconComponent}</div>}\n      <h1 className=\"text-[1.5rem] font-semibold text-black dark:text-white\">{title}</h1>\n    </div>\n  );\n}\n","export default function SubTitle({ subTitle }) {\n  return <h2 className=\"w-full text-[1.25rem] text-black dark:text-white text-center sm:text-right \">{subTitle}</h2>;\n}\n","import AnimateElements from '../../components/Utility/AnimateElements';\n\nexport default function WrapperTitle({ children }) {\n  return (\n    <AnimateElements>\n      <div className=\"relative z-10 flex flex-col lg:flex-row items-center lg:justify-between gap-4 mb-16 after:content-[''] after:absolute after:-bottom-4 after:left-1/2 after:-translate-x-1/2 after:w-full after:h-[2px] after:bg-gray-200 dark:after:bg-sky-600 opacity-0 init-animate-3\">\n        {children}\n      </div>\n    </AnimateElements>\n  );\n}\n","import React, { useState } from 'react'; // <-- Импорт useState\nimport { useTranslation } from 'react-i18next';\nimport Modal from '../Modal/Modal';\nimport { BsFiletypePdf } from 'react-icons/bs';\n\nexport default function CertificatesListItem({ item }) {\n  const { t } = useTranslation();\n\n  // Состояние и функции для управления отображением модального окна\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n\n  return (\n    <li className=\"relative z-10 flex flex-col xl:flex-row h-full shadow-lg rounded-md overflow-hidden group opacity-0 init-animate-1\">\n      <img\n        src={process.env.PUBLIC_URL + item.thumbnail}\n        alt={item['name-certificate']}\n        className=\"block w-full xl:w-[31.25rem] h-auto duration-200 group-hover:scale-105 cursor-pointer\"\n        onClick={handleOpenModal}\n        width=\"500\"\n        height=\"281\"\n      />\n      {isModalOpen && (\n        <Modal closeModal={handleCloseModal} width=\"w-11/12 lg:w-10/12 xl:w-10/12\">\n          <div className=\"relative flex flex-col h-full max-h-[calc(100vh-5rem)] overflow-hidden\">\n            <div className=\"h-full overflow-y-auto scrollbar-w-1 scrollbar scrollbar-rounded-full scrollbar-thumb-sky-600 scrollbar-track-gray-400\">\n              <img src={process.env.PUBLIC_URL + item.fullImage} alt={item['name-certificate']} className=\"w-full\" width=\"1000\" height=\"562\" />\n            </div>\n\n            <a\n              className=\"absolute top-20 left-0 py-2 px-4 flex items-center gap-4 text-white  text-[1rem] lg:text-[1.25rem] -translate-x-[calc(100%-3.5rem)] duration-200 hover:translate-x-0 bg-green-600/70 hover:bg-green-600 \"\n              href={process.env.PUBLIC_URL + item.linkPDF}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t('resume-page.link-pdf')}\n              <BsFiletypePdf className=\"w-6 h-6 text-white font-bold text-[1.25rem]\" />\n            </a>\n          </div>\n        </Modal>\n      )}\n    </li>\n  );\n}\n","import React from 'react';\nimport dbCertificate from '../../db/certificates.json';\nimport CertificatesListItem from './CertificatesListItem';\nimport AnimateElements from '../Utility/AnimateElements';\n\nexport default function CertificatesList() {\n  const data = dbCertificate\n    .map(item => {\n      return {\n        id: item.certificate.id,\n        thumbnail: item.certificate.thumbnail,\n        fullImage: item.certificate.fullImage,\n        linkPDF: item.certificate.linkPDF,\n      };\n    })\n    .reverse();\n\n  return (\n    <AnimateElements>\n      <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 3xl:grid-cols-5 4xl:grid-cols-6 gap-6 \">\n        {data.map(item => (\n          <CertificatesListItem key={item.id} item={item} />\n        ))}\n      </ul>\n    </AnimateElements>\n  );\n}\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import React, { useState, useEffect } from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { useInView } from 'react-intersection-observer';\nexport default function TechSkills({ skill }) {\n  const [progressValue, setProgressValue] = useState(0);\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  useEffect(() => {\n    if (inView) {\n      setTimeout(() => {\n        setProgressValue(parseInt(skill.value));\n      }, 50);\n    }\n  }, [inView, skill.value]);\n\n  return (\n    <li\n      className=\"relative z-10 bg-white dark:bg-neutral-800 rounded-full w-full sm:w-10/12 md:w-9/12 lg:w-full xxl:w-10/12 2xl:w-7/12 h-auto mx-auto flex flex-col items-center justify-center duration-300 hover:scale-110 opacity-0 init-animate-1\"\n      ref={ref}\n    >\n      <div className=\"relative z-10 w-full h-full flex items-center justify-center\">\n        <CircularProgressbar\n          value={progressValue}\n          styles={buildStyles({\n            textSize: '0px',\n            pathColor: '#20a34d',\n            trailColor: '#ededed',\n            pathTransitionDuration: 1.5,\n          })}\n        />\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center p-5\">\n          <p className=\"text-black dark:text-white font-medium text-center \">{skill.label}</p>\n          <p className=\"text-black dark:text-white text-center font-bold text-[1.25rem]\">{skill.value}%</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React from \"react\";\nimport dbTechSkills from \"../../db/techskills.json\";\nimport TechSkills from \"./TechSkills\"; // Импортируем компонент TechSkills\nimport AnimateElements from \"../../components/Utility/AnimateElements\";\n\nexport default function TechSkillsIndicators() {\n  return (\n    <AnimateElements>\n      <ul className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 xl:grid-cols-7 gap-6 md:gap-4\">\n        {dbTechSkills.map((skill) => (\n          <TechSkills skill={skill.techskill} key={skill.techskill.id} />\n        ))}\n      </ul>\n    </AnimateElements>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useInView } from 'react-intersection-observer';\nimport AnimateElements from '../../components/Utility/AnimateElements';\n\nexport default function ProgressLangSkills() {\n  const { t } = useTranslation();\n\n  const skills = useMemo(\n    () => [\n      { value: 40, languageKey: 'english' },\n      { value: 70, languageKey: 'polish' },\n      { value: 100, languageKey: 'ukrainian' },\n      { value: 100, languageKey: 'russian' },\n    ],\n    []\n  );\n\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n  });\n\n  const [currentValues, setCurrentValues] = useState(skills.map(d => 0));\n\n  useEffect(() => {\n    if (inView) {\n      const maxProgressValue = Math.max(...skills.map(skill => skill.value));\n      if (Math.max(...currentValues) < maxProgressValue) {\n        const timeout = setTimeout(() => {\n          setCurrentValues(prevValues => prevValues.map((v, index) => Math.min(v + 1, skills[index].value)));\n        }, 20);\n        return () => clearTimeout(timeout);\n      }\n    }\n  }, [currentValues, skills, inView]);\n\n  return (\n    <AnimateElements>\n      <ul className=\"grid grid-cols lg:grid-cols-2 gap-4\" ref={ref}>\n        <li className=\"relative z-10 h-8 bg-gray-200 w-full rounded-lg px-5 opacity-0 init-animate-1\">\n          <div className=\"absolute left-0 top-0 h-8 bg-sky-600 rounded-lg\" style={{ width: `${currentValues[0]}%` }}>\n            <div className=\"absolute w-full top-0 bottom-0 flex justify-between items-center gap-4 px-5 text-white font-medium\">\n              <div className=\"hidden sm:block\">{t('language-skills.english')}</div>\n              <div className=\"block sm:hidden\">{t('language-skills.en')}</div>\n              <div className=\"ml-auto\">{currentValues[0]}%</div>\n            </div>\n          </div>\n        </li>\n        <li className=\"relative z-10 h-8 bg-gray-200 w-full rounded-lg px-5 opacity-0 init-animate-1\">\n          <div className=\"absolute left-0 top-0 h-8 bg-sky-600 rounded-lg\" style={{ width: `${currentValues[1]}%` }}>\n            <div className=\"absolute w-full top-0 bottom-0 flex justify-between items-center gap-4 px-5 text-white font-medium\">\n              <div className=\"hidden sm:block\">{t('language-skills.polish')}</div>\n              <div className=\"block sm:hidden\">{t('language-skills.pl')}</div>\n              <div className=\"ml-auto\">{currentValues[1]}%</div>\n            </div>\n          </div>\n        </li>\n        <li className=\"relative z-10 h-8 bg-gray-200 w-full rounded-lg px-5 opacity-0 init-animate-1\">\n          <div className=\" absolute left-0 top-0 h-8 bg-sky-600 rounded-lg\" style={{ width: `${currentValues[2]}%` }}>\n            <div className=\"absolute w-full top-0 bottom-0 flex justify-between items-center gap-4 px-5 text-white font-medium\">\n              <div className=\"hidden sm:block\">{t('language-skills.ukrainian')}</div>\n              <div className=\"block sm:hidden\">{t('language-skills.uk')}</div>\n              <div className=\"ml-auto\">{currentValues[2]}%</div>\n            </div>\n          </div>\n        </li>\n        <li className=\"relative z-10 h-8 bg-gray-200 w-full rounded-lg px-5 opacity-0 init-animate-1\">\n          <div className=\" absolute left-0 top-0 h-8 bg-sky-600 rounded-lg\" style={{ width: `${currentValues[3]}%` }}>\n            <div className=\"absolute w-full top-0 bottom-0 flex justify-between items-center gap-4 px-5 text-white font-medium\">\n              <div className=\"hidden sm:block\">{t('language-skills.russian')}</div>\n              <div className=\"block sm:hidden\">{t('language-skills.ru')}</div>\n              <div className=\"ml-auto\">{currentValues[3]}%</div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </AnimateElements>\n  );\n}\n","import { useTranslation } from 'react-i18next';\nimport { BsCheck2Circle } from 'react-icons/bs';\nimport AnimateElements from '../../components/Utility/AnimateElements';\n\nexport default function SoftSkills() {\n  const { t } = useTranslation();\n  return (\n    <AnimateElements>\n      <ul className=\"grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-8\">\n        <li className=\"relative z-10 opacity-0 init-animate-1\" data-time=\"0.4s\" data-delay=\"0.5s\">\n          <BsCheck2Circle className=\"w-12 h-12 text-green-600 mx-auto mb-2\" />\n          <p className=\"text-black dark:text-white text-center\">{t('soft-skills.skill-1')}</p>\n        </li>\n        <li className=\"relative z-10 opacity-0 init-animate-1\" data-time=\"0.8s\" data-delay=\"0.5s\">\n          <BsCheck2Circle className=\"w-12 h-12 text-green-600 mx-auto mb-2\" />\n          <p className=\"text-black dark:text-white text-center\">{t('soft-skills.skill-2')}</p>\n        </li>\n        <li className=\"relative z-10 opacity-0 init-animate-1\" data-time=\"1.2s\" data-delay=\"0.5s\">\n          <BsCheck2Circle className=\"w-12 h-12 text-green-600 mx-auto mb-2\" />\n          <p className=\"text-black dark:text-white text-center\">{t('soft-skills.skill-3')}</p>\n        </li>\n        <li className=\"relative z-10 opacity-0 init-animate-1\" data-time=\"1.6s\" data-delay=\"0.5s\">\n          <BsCheck2Circle className=\"w-12 h-12 text-green-600 mx-auto mb-2\" />\n          <p className=\"text-black dark:text-white text-center\">{t('soft-skills.skill-4')}</p>\n        </li>\n        <li className=\"relative z-10 opacity-0 init-animate-1\" data-time=\"2s\" data-delay=\"0.5s\">\n          <BsCheck2Circle className=\"w-12 h-12 text-green-600 mx-auto mb-2\" />\n          <p className=\"text-black dark:text-white text-center\">{t('soft-skills.skill-5')}</p>\n        </li>\n        <li className=\"relative z-10 opacity-0 init-animate-1\" data-time=\"2.4s\" data-delay=\"0.5s\">\n          <BsCheck2Circle className=\"w-12 h-12 text-green-600  mx-auto mb-2\" />\n          <p className=\"text-black dark:text-white text-center\">{t('soft-skills.skill-6')}</p>\n        </li>\n      </ul>\n    </AnimateElements>\n  );\n}\n","import PageTitle from 'components/Utility/PageTitle';\nimport SubTitle from 'components/Utility/SubTitle';\nimport { useTranslation } from 'react-i18next';\nimport { BsPersonVcard } from 'react-icons/bs';\nimport CertificatesList from 'components/Certificates/CertificatesList';\nimport TechSkillsIndicators from 'components/TechSkills/TechSkillsIndicators';\nimport ProgressLangSkills from 'components/LangSkillsProgressBar/LangSkillsProgressBar';\nimport MetaTags from 'components/MetaTags/MetaTags';\nimport WrapperTitle from 'components/Utility/WrapperTitle';\nimport SoftSkills from 'components/SoftSkills/SoftSkills';\n// import EducationList from 'components/Education/EducationList';\n// import ExperienceList from 'components/Experience/ExperienceList';\nimport { BsFillFilePdfFill } from 'react-icons/bs';\nexport default function ResumePage() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MetaTags metaTitle={t('resume-page.meta-title')} metaDescription={t('resume-page.meta-description')} />\n      <WrapperTitle>\n        <PageTitle icon={<BsPersonVcard />} title={t('resume-page.title')} />\n        <SubTitle subTitle={t('resume-page.sub-title')} />\n      </WrapperTitle>\n      <div className=\"flex items-center gap-4 justify-end mt-5 group\">\n        <a\n          href=\"/images/resume/yevhen-dibrovsky-resume.pdf\"\n          className=\"text-sky-600 hover:underline  dark:text-sky-400 text-[1.2rem] flex items-center gap-4\"\n          aria-label={t('btn.download-resume')}\n          download\n        >\n          {t('btn.download-resume')}\n          <BsFillFilePdfFill className=\"text-red-600 dark:text-red-500 w-8 h-8 duration-200 group-hover:scale-110\" />\n        </a>\n      </div>\n      <div className=\"my-5\">\n        <div className=\"inline-block relative my-5\">\n          <h3 className=\"text-black dark:text-white text-[1.25rem] font-semibold\">{t('resume-page.sub-title-1')}</h3>\n          <div className=\"relative after:block after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] after:bg-sky-600 dark:after:bg-sky-600\"></div>\n        </div>\n        <CertificatesList />\n      </div>\n      <div className=\"my-5\">\n        <div className=\"inline-block relative my-5\">\n          <h3 className=\"text-black dark:text-white text-[1.25rem] font-semibold\">{t('resume-page.sub-title-2')}</h3>\n          <div className=\"relative after:block after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] after:bg-sky-600 dark:after:bg-sky-600\"></div>\n        </div>\n        <TechSkillsIndicators />\n      </div>\n      <div className=\"my-5\">\n        <div className=\"inline-block relative my-5\">\n          <h3 className=\"text-black dark:text-white text-[1.25rem] font-semibold\">{t('resume-page.sub-title-3')}</h3>\n          <div className=\"relative after:block after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] after:bg-sky-600 dark:after:bg-sky-600\"></div>\n        </div>\n        <ProgressLangSkills />\n      </div>\n      <div className=\"my-5\">\n        <div className=\"inline-block relative my-5\">\n          <h3 className=\"text-black dark:text-white text-[1.25rem] font-semibold\">{t('resume-page.sub-title-4')}</h3>\n          <div className=\"relative after:block after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] after:bg-sky-600 dark:after:bg-sky-600\"></div>\n        </div>\n        <SoftSkills />\n      </div>\n      {/* <div className=\"my-5\">\n        <div className=\"inline-block relative my-5\">\n          <h3 className=\"text-black dark:text-white text-[1.25rem] font-semibold\">{t('resume-page.sub-title-5')}</h3>\n          <div className=\"relative after:block after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] after:bg-sky-600 dark:after:bg-sky-600\"></div>\n        </div>\n        <EducationList />\n      </div> */}\n      {/* <div className=\"my-5\">\n        <div className=\"inline-block relative my-5\">\n          <h3 className=\"text-black dark:text-white text-[1.25rem] font-semibold\">{t('resume-page.sub-title-6')}</h3>\n          <div className=\"relative after:block after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] after:bg-sky-600 dark:after:bg-sky-600\"></div>\n        </div>\n        <ExperienceList />\n      </div> */}\n    </>\n  );\n}\n"],"names":["_ref","metaTitle","metaDescription","i18n","useTranslation","_jsxs","Helmet","children","_jsx","lang","language","name","content","Modal","closeModal","width","backgroundImage","showChevrons","handleNext","handlePrev","current","total","backdropStyle","concat","process","useEffect","document","body","classList","add","handleKeyDown","e","keyCode","addEventListener","remove","removeEventListener","modalContent","className","onClick","style","stopPropagation","BsChevronLeft","BsChevronRight","BsXLg","ReactDOM","getElementById","elementsRef","useRef","elements","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","target","isIntersecting","animateClass","duration","getAttribute","delay","delayInMilliseconds","parseFloat","contains","animationDuration","setTimeout","threshold","rootMargin","element","observe","unobserve","ref","PageTitle","icon","title","IconComponent","React","SubTitle","subTitle","WrapperTitle","AnimateElements","CertificatesListItem","item","t","isModalOpen","setIsModalOpen","useState","src","thumbnail","alt","handleOpenModal","height","handleCloseModal","fullImage","href","linkPDF","rel","BsFiletypePdf","CertificatesList","data","dbCertificate","map","id","certificate","reverse","VIEWBOX_CENTER_X","VIEWBOX_CENTER_Y","Path","_a","counterClockwise","dashRatio","pathRadius","strokeWidth","createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","CircularProgressbar","_super","__extends","prototype","getBackgroundPadding","this","props","background","backgroundPadding","getPathRadius","getPathRatio","value","minValue","maxValue","min","max","render","circleRatio","classes","styles","text","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","Component","buildStyles","strokeLinecap","textColor","textSize","pathColor","pathTransition","pathTransitionDuration","trailColor","backgroundColor","rotationTransform","undefined","rotationTransformOrigin","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","fill","fontSize","obj","keys","key","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","sort","filter","has","set","toString","get","callback","arguments","length","fallbackInView","window","bounds","getBoundingClientRect","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","instance","thresholds","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","size","disconnect","useInView","triggerOnce","skip","initialInView","onChange","setRef","React2","state","setState","entryTarget","previousEntryTarget","result","TechSkills","skill","progressValue","setProgressValue","parseInt","label","TechSkillsIndicators","dbTechSkills","techskill","ProgressLangSkills","skills","useMemo","languageKey","currentValues","setCurrentValues","maxProgressValue","timeout","prevValues","v","index","clearTimeout","SoftSkills","BsCheck2Circle","ResumePage","_Fragment","MetaTags","BsPersonVcard","download","BsFillFilePdfFill"],"sourceRoot":""}