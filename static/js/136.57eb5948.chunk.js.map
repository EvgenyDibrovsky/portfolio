{"version":3,"file":"static/js/136.57eb5948.chunk.js","mappings":"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","sources":["components/MetaTags/MetaTags.jsx","components/Utility/AnimateElements.jsx","components/Utility/PageTitle.jsx","components/Utility/SubTitle.jsx","components/Utility/WrapperTitle.jsx","components/ContactForm/ContactForm.jsx","components/ContactDetails/ContactDetails.jsx","pages/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nconst MetaTags = ({ metaTitle, metaDescription }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <Helmet>\n      <html lang={i18n.language} />\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n    </Helmet>\n  );\n};\n\nexport default MetaTags;\n","import React, { useEffect, useRef } from 'react';\n\nconst AnimateElements = ({ children }) => {\n  const elementsRef = useRef(null);\n\n  useEffect(() => {\n    const elements = elementsRef.current.querySelectorAll('.init-animate-1, .init-animate-2, .init-animate-3, .init-animate-4, .init-animate-5');\n\n    function onEntry(entries) {\n      entries.forEach(entry => {\n        const target = entry.target;\n        if (entry.isIntersecting) {\n          let animateClass;\n          let duration = target.getAttribute('data-time') || '1s';\n          let delay = target.getAttribute('data-delay') || '0s';\n          let delayInMilliseconds = parseFloat(delay) * 1000;\n\n          if (target.classList.contains('init-animate-1')) {\n            animateClass = 'animate-animate-1';\n          } else if (target.classList.contains('init-animate-2')) {\n            animateClass = 'animate-animate-2';\n          } else if (target.classList.contains('init-animate-3')) {\n            animateClass = 'animate-animate-3';\n          } else if (target.classList.contains('init-animate-4')) {\n            animateClass = 'animate-animate-4';\n          } else if (target.classList.contains('init-animate-5')) {\n            animateClass = 'animate-animate-5';\n          }\n\n          if (animateClass) {\n            target.classList.remove('not-animated');\n            target.style.animationDuration = duration;\n\n            setTimeout(() => {\n              target.classList.remove('opacity-0');\n              target.classList.add(animateClass);\n            }, delayInMilliseconds);\n          }\n        }\n      });\n    }\n\n    const observer = new IntersectionObserver(onEntry, {\n      threshold: 0.1,\n      rootMargin: '0px 0px -5% 0px',\n    });\n\n    elements.forEach(element => {\n      element.classList.add('not-animated');\n      observer.observe(element);\n    });\n\n    return () => {\n      elements.forEach(element => observer.unobserve(element));\n    };\n  }, []);\n\n  return <div ref={elementsRef}>{children}</div>;\n};\n\nexport default AnimateElements;\n","import React from 'react';\n\nexport default function PageTitle({ icon, title }) {\n  const IconComponent = icon\n    ? React.cloneElement(icon, {\n        className: 'text-iconColor dark:text-iconColorDark w-6 h-6',\n      })\n    : null;\n\n  return (\n    <div className=\"sm:w-full flex items-center gap-4\">\n      {IconComponent && <div className=\"animate-iconTitle\">{IconComponent}</div>}\n      <h1 className=\"text-[1.5rem] font-semibold text-black dark:text-white\">{title}</h1>\n    </div>\n  );\n}\n","export default function SubTitle({ subTitle }) {\n  return <h2 className=\"w-full text-[1.25rem] text-black dark:text-white text-center sm:text-right \">{subTitle}</h2>;\n}\n","import AnimateElements from '../../components/Utility/AnimateElements';\n\nexport default function WrapperTitle({ children }) {\n  return (\n    <AnimateElements>\n      <div className=\"relative flex flex-col lg:flex-row items-center lg:justify-between gap-4 mb-16 after:content-[''] after:absolute after:-bottom-4 after:left-1/2 after:-translate-x-1/2 after:w-full after:h-[2px] after:bg-gray-200 dark:after:bg-sky-600 opacity-0 init-animate-3\">\n        {children}\n      </div>\n    </AnimateElements>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport AnimateElements from \"../../components/Utility/AnimateElements\";\nimport axios from \"axios\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\nimport { IoIosArrowForward } from \"react-icons/io\";\n\nexport default function ContactForm() {\n  const { t } = useTranslation();\n  const { executeRecaptcha } = useGoogleReCaptcha();\n  const [statusMessage, setStatusMessage] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(null);\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(t(\"contact-form.enter-name\")),\n    email: Yup.string().email().required(t(\"contact-form.enter-email\")),\n    subject: Yup.string().required(t(\"contact-form.enter-message-subject\")),\n    message: Yup.string().required(t(\"contact-form.enter-message\")),\n    confirmation_of_conditions: Yup.boolean().required(t(\"contact-form.confirmation-required\")),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (!values.confirmation_of_conditions) {\n      setStatusMessage(t(\"contact-form.confirmation-required\"));\n      setIsSuccess(false);\n      setSubmitting(false);\n      return;\n    }\n\n    if (executeRecaptcha) {\n      const token = await executeRecaptcha(\"contact_form\");\n      values.recaptchaToken = token;\n    }\n\n    axios\n      .post(\"https://edweb.site/contact-form\", values) // Замените на актуальный URL сервера\n      .then((response) => {\n        setStatusMessage(t(\"contact-form.sent-successfully\"));\n        setIsSuccess(true);\n        resetForm();\n      })\n      .catch((error) => {\n        setStatusMessage(t(\"contact-form.sent-no-successfully\"));\n        setIsSuccess(false);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <>\n      <AnimateElements>\n        <div className=\"w-full lg:w-10/12 mx-auto opacity-0 init-animate-1\">\n          <Formik\n            initialValues={{\n              name: \"\",\n              email: \"\",\n              subject: \"\",\n              message: \"\",\n              confirmation_of_conditions: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ errors, touched }) => (\n              <Form className=\"w-full\">\n                <div className=\"w-full flex-col lg:flex-row min-h-[18rem] flex gap-4 mb-10\">\n                  <div className=\"w-full lg:w-6/12 flex gap-5 flex-col justify-between\">\n                    <label className=\"flex flex-col gap-2 text-black dark:text-white\">\n                      {t(\"contact-form.name\")}\n                      <Field\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder={t(\"contact-form.enter-name\")}\n                        className={`appearance-none w-full h-14 bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark px-4 rounded-md ${\n                          errors.name && touched.name ? \"error\" : \"\"\n                        }`}\n                      />\n                    </label>\n\n                    <label className=\"flex flex-col gap-2 text-black dark:text-white\">\n                      {t(\"contact-form.email\")}\n                      <Field\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder={t(\"contact-form.enter-email\")}\n                        className={`w-full h-14 bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark px-4 rounded-md ${errors.email && touched.email ? \"error\" : \"\"}`}\n                      />\n                    </label>\n\n                    <label className=\"flex flex-col gap-2 text-black dark:text-white\">\n                      {t(\"contact-form.message-subject\")}\n                      <Field\n                        name=\"subject\"\n                        type=\"text\"\n                        placeholder={t(\"contact-form.enter-message-subject\")}\n                        className={`w-full h-14 bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark px-4 rounded-md ${errors.subject && touched.subject ? \"error\" : \"\"}`}\n                      />\n                    </label>\n                  </div>\n\n                  <div className=\"w-full lg:w-6/12\">\n                    <label className=\"flex flex-col gap-2 h-[20rem] lg:h-full text-black dark:text-white\">\n                      {t(\"contact-form.message\")}\n                      <Field\n                        as=\"textarea\"\n                        name=\"message\"\n                        placeholder={t(\"contact-form.enter-message\")}\n                        className={`w-full h-full  bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark p-4 rounded-md resize-none ${\n                          errors.message && touched.message ? \"error\" : \"\"\n                        }`}\n                      />\n                    </label>\n                  </div>\n                </div>\n\n                <div className=\"block mb-4\">\n                  <label className=\"lg:inline-flex lg:items-center lg:gap-1 text-black dark:text-white cursor-pointer\">\n                    <Field\n                      type=\"checkbox\"\n                      name=\"confirmation_of_conditions\"\n                      className={`form-checkbox mr-2 cursor-pointer ${errors.confirmation_of_conditions && touched.confirmation_of_conditions ? \"error\" : \"\"}`}\n                    />\n                    {t(\"contact-form.accept-form\")}\n                    <a\n                      href=\"/regulations-edweb\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-block font-semibold underline duration-200 hover:text-sky-600 ml-1 lg:ml-0\"\n                      aria-label={t(\"regulations-edweb.title\")}\n                    >\n                      {t(\"regulations-edweb.title\")}\n                    </a>\n                  </label>\n                </div>\n                <div className=\"mb-10\">\n                  <p className=\"text-xs text-black dark:text-white\">\n                    {t(\"recaptcha.text-1\")}\n                    <a\n                      href=\"https://policies.google.com/privacy\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"font-bold underline duration-200  hover:text-sky-600\"\n                      aria-label={t(\"recaptcha.privacy-policy\")}\n                    >\n                      {t(\"recaptcha.privacy-policy\")}\n                    </a>\n                    {t(\"recaptcha.text-2\")}\n                    <a\n                      href=\"https://policies.google.com/terms\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"font-bold underline duration-200  hover:text-sky-600\"\n                      aria-label={t(\"recaptcha.terms-of-service\")}\n                    >\n                      {t(\"recaptcha.terms-of-service\")}\n                    </a>\n                    {t(\"recaptcha.text-3\")}\n                  </p>\n                </div>\n                {statusMessage && (\n                  <div\n                    className={`flex justify-center items-center text-white text-center font-semibold status-message h-16 sm:h-12 mb-10 rounded-sm ${\n                      isSuccess ? \"bg-gradient-to-r from-green-600 via-green-400 to-green-600\" : \"bg-gradient-to-r from-red-600 via-red-400 to-red-600\"\n                    }`}\n                  >\n                    {statusMessage}\n                  </div>\n                )}\n\n                <button type=\"submit\" className=\"btn-contact-form group\" title={t(\"contact-form.send\")}>\n                  {t(\"contact-form.send\")}\n                  <IoIosArrowForward className=\"duration-200 group-hover:translate-x-2\" />\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </AnimateElements>\n    </>\n  );\n}\n","import { useTranslation } from 'react-i18next';\nimport { BsPhone, BsEnvelope, BsPinMap } from 'react-icons/bs';\nimport AnimateElements from '../../components/Utility/AnimateElements';\n\nexport default function ContactDetails() {\n  const { t } = useTranslation();\n  return (\n    <AnimateElements>\n      <ul className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-16\">\n        <li className=\"flex justify-start xl:justify-center items-center gap-5 lg:flex-col xl:flex-row bg-white dark:bg-neutral-900 shadow-lg px-10 py-6 lg:py-10 opacity-0 init-animate-1\">\n          <BsPhone className=\"w-8 h-8 text-sky-600\" />\n          <a\n            className=\"text-[1rem] lg:text-[1.25rem] font-semibold text-center text-textColor dark:text-white transition-all duration-200 hover:underline\"\n            href={`tel:${t('contact-dedails.phone-number')}`}\n          >\n            {t('contact-dedails.phone-number')}\n          </a>\n        </li>\n        <li className=\"flex justify-start xl:justify-center items-center gap-5 lg:flex-col xl:flex-row bg-white dark:bg-neutral-900  shadow-lg px-10 py-6 lg:py-10 opacity-0 init-animate-1\">\n          <BsEnvelope className=\"w-8 h-8 text-sky-600\" />\n          <a className=\"text-[1rem] lg:text-[1.25rem] font-semibold text-center text-textColor dark:text-white duration-200 hover:underline\" href={`mailto:${t('contact-dedails.email-address')}`}>\n            {t('contact-dedails.email-address')}\n          </a>\n        </li>\n        <li className=\"flex justify-start xl:justify-center items-center gap-5 lg:flex-col xl:flex-row bg-white dark:bg-neutral-900  shadow-lg px-10 py-6 lg:py-10 opacity-0 init-animate-1\">\n          <BsPinMap className=\"w-8 h-8 text-sky-600\" />\n          <p className=\"text-[1rem] lg:text-[1.25rem] font-semibold text-center text-textColor dark:text-white\">{t('contact-dedails.localization')}</p>\n        </li>\n      </ul>\n    </AnimateElements>\n  );\n}\n","import PageTitle from 'components/Utility/PageTitle';\nimport SubTitle from 'components/Utility/SubTitle';\nimport { useTranslation } from 'react-i18next';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { BsPhone } from 'react-icons/bs';\nimport MetaTags from 'components/MetaTags/MetaTags';\nimport ContactDetails from 'components/ContactDetails/ContactDetails';\nimport WrapperTitle from 'components/Utility/WrapperTitle';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nconst RECAPTCHA_KEY = process.env.REACT_APP_RECAPTCHA_KEY;\n\nexport default function ContactPage() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MetaTags metaTitle={t('contacts-page.meta-title')} metaDescription={t('contacts-page.meta-description')} />\n      <WrapperTitle>\n        <PageTitle icon={<BsPhone />} title={t('contacts-page.title')} />\n        <SubTitle subTitle={t('contacts-page.sub-title')} />\n      </WrapperTitle>\n      <ContactDetails />\n      <GoogleReCaptchaProvider reCaptchaKey={RECAPTCHA_KEY}>\n        <ContactForm />\n      </GoogleReCaptchaProvider>\n    </>\n  );\n}\n"],"names":["_ref","metaTitle","metaDescription","i18n","useTranslation","_jsxs","Helmet","children","_jsx","lang","language","name","content","elementsRef","useRef","useEffect","elements","current","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","target","isIntersecting","animateClass","duration","getAttribute","delay","delayInMilliseconds","parseFloat","classList","contains","remove","style","animationDuration","setTimeout","add","threshold","rootMargin","element","observe","unobserve","ref","PageTitle","icon","title","IconComponent","React","className","SubTitle","subTitle","WrapperTitle","AnimateElements","ContactForm","t","executeRecaptcha","useGoogleReCaptcha","statusMessage","setStatusMessage","useState","isSuccess","setIsSuccess","validationSchema","Yup","required","email","subject","message","confirmation_of_conditions","_Fragment","Formik","initialValues","onSubmit","async","values","setSubmitting","resetForm","token","recaptchaToken","axios","post","then","response","catch","error","finally","_ref2","errors","touched","Form","Field","type","placeholder","concat","as","href","rel","IoIosArrowForward","ContactDetails","BsPhone","BsEnvelope","BsPinMap","RECAPTCHA_KEY","process","REACT_APP_RECAPTCHA_KEY","ContactPage","MetaTags","GoogleReCaptchaProvider","reCaptchaKey"],"sourceRoot":""}