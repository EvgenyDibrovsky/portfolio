{"version":3,"file":"static/js/3136.9f748bb1.chunk.js","mappings":"iKAKA,MAuFA,EAvFoBA,KAClB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAEjCC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,KAAoBC,gBACZC,EAAAA,EAAAA,GAASC,EAAO,IACrBC,MAAK,KACNP,GAAQ,EAAK,GACb,GACD,IAyEH,OAAKD,GAEES,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,GAAG,cAAcC,QAzEV,CACvBC,UAAU,EAEVC,SAAU,IACVC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,QAERC,QAAS,CACPF,QAAQ,EACRC,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,SAAU,IACVC,SAAU,MAKhBC,UAAW,CACTC,MAAO,CACLC,MAAO,WAETC,MAAO,CACLF,MAAO,UACPH,SAAU,IACVR,QAAQ,EACRc,QAAS,GACTC,MAAO,GAETC,KAAM,CACJC,UAAW,OACXjB,QAAQ,EACRkB,SAAU,CACRC,QAAS,UAEXC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACPxB,QAAQ,EACRyB,KAAM,KAERb,MAAO,KAETE,QAAS,CACPF,MAAO,IAETc,MAAO,CACLC,KAAM,UAERC,KAAM,CACJhB,MAAO,CAAEiB,IAAK,EAAGC,IAAK,IAExBC,OAAQ,CACNnB,MAAO,IAGXoB,cAAc,KAGE,IAE8C,C,0ECrFlE,MAYA,EAZiBC,IAAqC,IAApC,UAAEC,EAAS,gBAAEC,GAAiBF,EAC9C,MAAM,KAAEG,IAASC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAAC,SAAA,EACLjD,EAAAA,EAAAA,KAAA,QAAMkD,KAAML,EAAKM,YACjBnD,EAAAA,EAAAA,KAAA,SAAAiD,SAAQN,KACR3C,EAAAA,EAAAA,KAAA,QAAMoD,KAAK,cAAcC,QAAST,MAC3B,C,yDCVb,MA0DA,EA1DwBF,IAAmB,IAAlB,SAAEO,GAAUP,EACnC,MAAMY,GAAcC,EAAAA,EAAAA,QAAO,MAsD3B,OApDA7D,EAAAA,EAAAA,YAAU,KACR,MAAM8D,EAAWF,EAAYG,QAAQC,iBAAiB,uFAoCtD,MAAMC,EAAW,IAAIC,sBAlCrB,SAAiBC,GACfA,EAAQC,SAAQC,IACd,MAAMC,EAASD,EAAMC,OACrB,GAAID,EAAME,eAAgB,CACxB,IAAIC,EACAhD,EAAW8C,EAAOG,aAAa,cAAgB,KAC/CC,EAAQJ,EAAOG,aAAa,eAAiB,KAC7CE,EAA0C,IAApBC,WAAWF,GAEjCJ,EAAOO,UAAUC,SAAS,kBAC5BN,EAAe,oBACNF,EAAOO,UAAUC,SAAS,kBACnCN,EAAe,oBACNF,EAAOO,UAAUC,SAAS,kBACnCN,EAAe,oBACNF,EAAOO,UAAUC,SAAS,kBACnCN,EAAe,oBACNF,EAAOO,UAAUC,SAAS,oBACnCN,EAAe,qBAGbA,IACFF,EAAOO,UAAUE,OAAO,gBACxBT,EAAOU,MAAMC,kBAAoBzD,EAEjC0D,YAAW,KACTZ,EAAOO,UAAUE,OAAO,aACxBT,EAAOO,UAAUM,IAAIX,EAAa,GACjCG,GAEP,IAEJ,GAEmD,CACjDS,UAAW,GACXC,WAAY,oBAQd,OALAvB,EAASM,SAAQkB,IACfA,EAAQT,UAAUM,IAAI,gBACtBlB,EAASsB,QAAQD,EAAQ,IAGpB,KACLxB,EAASM,SAAQkB,GAAWrB,EAASuB,UAAUF,IAAS,CACzD,GACA,KAEIhF,EAAAA,EAAAA,KAAA,OAAKmF,IAAK7B,EAAYL,SAAEA,GAAe,C,yDCvDhD,MAcA,EAdkBP,IAAsB,IAArB,KAAE0C,EAAI,MAAEC,GAAO3C,EAChC,MAAM4C,EAAgBF,EAClBG,EAAAA,aAAmBH,EAAM,CACvBI,UAAW,mDAEb,KAEJ,OACEzC,EAAAA,EAAAA,MAAA,OAAKyC,UAAU,oCAAmCvC,SAAA,CAC/CqC,IAAiBtF,EAAAA,EAAAA,KAAA,OAAKwF,UAAU,oBAAmBvC,SAAEqC,KACtDtF,EAAAA,EAAAA,KAAA,MAAIwF,UAAU,yDAAwDvC,SAAEoC,MACpE,C,6CCbV,MAGA,EAHiB3C,IAAmB,IAAlB,SAAE+C,GAAU/C,EAC5B,OAAO1C,EAAAA,EAAAA,KAAA,MAAIwF,UAAU,8EAA6EvC,SAAEwC,GAAc,C,yDCCpH,MASA,EATqB/C,IAAmB,IAAlB,SAAEO,GAAUP,EAChC,OACE1C,EAAAA,EAAAA,KAAC0F,EAAAA,EAAe,CAAAzC,UACdjD,EAAAA,EAAAA,KAAA,OAAKwF,UAAU,0QAAyQvC,SACrRA,KAEa,C,4JCCtB,MAuKA,EAvKoB0C,KAClB,MAAM,EAAEC,IAAM9C,EAAAA,EAAAA,OACR,iBAAE+C,IAAqBC,EAAAA,EAAAA,OACtBC,EAAeC,IAAoBvG,EAAAA,EAAAA,UAAS,OAC5CwG,EAAWC,IAAgBzG,EAAAA,EAAAA,UAAS,MAErC0G,EAAmBC,EAAAA,GAAW,CAClChD,KAAMgD,EAAAA,KAAaC,SAAST,EAAE,4BAC9BU,MAAOF,EAAAA,KAAaE,QAAQD,SAAST,EAAE,6BACvCW,QAASH,EAAAA,KAAaC,SAAST,EAAE,uCACjCY,QAASJ,EAAAA,KAAaC,SAAST,EAAE,+BACjCa,2BAA4BL,EAAAA,KAAcC,SAAST,EAAE,yCAgCvD,OACE5F,EAAAA,EAAAA,KAAA0G,EAAAA,SAAA,CAAAzD,UACEjD,EAAAA,EAAAA,KAAC0F,EAAAA,EAAe,CAAAzC,UACdjD,EAAAA,EAAAA,KAAA,OAAKwF,UAAU,6GAA4GvC,UACzHjD,EAAAA,EAAAA,KAAC2G,EAAAA,GAAM,CACLC,cAAe,CACbxD,KAAM,GACNkD,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,2BAA4B,IAE9BN,iBAAkBA,EAClBU,SA1CWjH,MAAOkH,EAAMpE,KAAoC,IAAlC,cAAEqE,EAAa,UAAEC,GAAWtE,EAC9D,IAAKoE,EAAOL,2BAIV,OAHAT,EAAiBJ,EAAE,uCACnBM,GAAa,QACba,GAAc,GAIhB,GAAIlB,EAAkB,CACpB,MAAMoB,QAAcpB,EAAiB,gBACrCiB,EAAOI,eAAiBD,CAC1B,CAEAE,EAAAA,EACGC,KAAK,kCAAmCN,GACxC/G,MAAKsH,IACJrB,EAAiBJ,EAAE,mCACnBM,GAAa,GACbc,GAAW,IAEZM,OAAMC,IACLvB,EAAiBJ,EAAE,sCACnBM,GAAa,EAAM,IAEpBsB,SAAQ,KACPT,GAAc,EAAM,GACpB,EAgB2B9D,SAEtBwE,IAAA,IAAC,OAAEC,EAAM,QAAEC,GAASF,EAAA,OACnB1E,EAAAA,EAAAA,MAAC6E,EAAAA,GAAI,CAACpC,UAAU,SAAQvC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKyC,UAAU,6DAA4DvC,SAAA,EACzEF,EAAAA,EAAAA,MAAA,OAAKyC,UAAU,uDAAsDvC,SAAA,EACnEF,EAAAA,EAAAA,MAAA,SAAOyC,UAAU,iDAAgDvC,SAAA,CAC9D2C,EAAE,sBACH5F,EAAAA,EAAAA,KAAC6H,EAAAA,GAAK,CACJzE,KAAK,OACLhB,KAAK,OACL0F,YAAalC,EAAE,2BACfJ,UAAS,4HAAAuC,OACPL,EAAOtE,MAAQuE,EAAQvE,KAAO,QAAU,UAK9CL,EAAAA,EAAAA,MAAA,SAAOyC,UAAU,iDAAgDvC,SAAA,CAC9D2C,EAAE,uBACH5F,EAAAA,EAAAA,KAAC6H,EAAAA,GAAK,CACJzE,KAAK,QACLhB,KAAK,QACL0F,YAAalC,EAAE,4BACfJ,UAAS,4GAAAuC,OAA8GL,EAAOpB,OAASqB,EAAQrB,MAAQ,QAAU,UAIrKvD,EAAAA,EAAAA,MAAA,SAAOyC,UAAU,iDAAgDvC,SAAA,CAC9D2C,EAAE,iCACH5F,EAAAA,EAAAA,KAAC6H,EAAAA,GAAK,CACJzE,KAAK,UACLhB,KAAK,OACL0F,YAAalC,EAAE,sCACfJ,UAAS,4GAAAuC,OAA8GL,EAAOnB,SAAWoB,EAAQpB,QAAU,QAAU,aAK3KvG,EAAAA,EAAAA,KAAA,OAAKwF,UAAU,mBAAkBvC,UAC/BF,EAAAA,EAAAA,MAAA,SAAOyC,UAAU,qEAAoEvC,SAAA,CAClF2C,EAAE,yBACH5F,EAAAA,EAAAA,KAAC6H,EAAAA,GAAK,CACJG,GAAG,WACH5E,KAAK,UACL0E,YAAalC,EAAE,8BACfJ,UAAS,0HAAAuC,OACPL,EAAOlB,SAAWmB,EAAQnB,QAAU,QAAU,eAOxDxG,EAAAA,EAAAA,KAAA,OAAKwF,UAAU,aAAYvC,UACzBF,EAAAA,EAAAA,MAAA,SAAOyC,UAAU,oFAAmFvC,SAAA,EAClGjD,EAAAA,EAAAA,KAAC6H,EAAAA,GAAK,CACJzF,KAAK,WACLgB,KAAK,6BACLoC,UAAS,qCAAAuC,OAAuCL,EAAOjB,4BAA8BkB,EAAQlB,2BAA6B,QAAU,OAEtIzG,EAAAA,EAAAA,KAAA,KAAGwF,UAAU,mBAAmByC,wBAAyB,CAAEC,OAAQtC,EAAE,qCAGzE5F,EAAAA,EAAAA,KAAA,OAAKwF,UAAU,QAAOvC,UACpBF,EAAAA,EAAAA,MAAA,KAAGyC,UAAU,qCAAoCvC,SAAA,CAC9C2C,EAAE,qBACH5F,EAAAA,EAAAA,KAAA,KACEmI,KAAK,sCACLnE,OAAO,SACPoE,IAAI,sBACJ5C,UAAU,uDACV,aAAYI,EAAE,4BAA4B3C,SAEzC2C,EAAE,8BAEJA,EAAE,qBACH5F,EAAAA,EAAAA,KAAA,KACEmI,KAAK,oCACLnE,OAAO,SACPoE,IAAI,sBACJ5C,UAAU,uDACV,aAAYI,EAAE,8BAA8B3C,SAE3C2C,EAAE,gCAEJA,EAAE,yBAGNG,IACC/F,EAAAA,EAAAA,KAAA,OACEwF,UAAS,sHAAAuC,OACP9B,EAAY,6DAA+D,wDAC1EhD,SAEF8C,KAILhD,EAAAA,EAAAA,MAAA,UAAQX,KAAK,SAASoD,UAAU,yBAAyBH,MAAOO,EAAE,qBAAqB3C,SAAA,CACpF2C,EAAE,sBACH5F,EAAAA,EAAAA,KAACqI,EAAAA,IAAiB,CAAC7C,UAAU,6EAE1B,SAKd,E,uBCzKP,MA4BA,EA5BuB8C,KACrB,MAAM,EAAE1C,IAAM9C,EAAAA,EAAAA,MACd,OACE9C,EAAAA,EAAAA,KAAC0F,EAAAA,EAAe,CAAAzC,UACdF,EAAAA,EAAAA,MAAA,MAAIyC,UAAU,8CAA6CvC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,MAAIyC,UAAU,oLAAmLvC,SAAA,EAC/LjD,EAAAA,EAAAA,KAACuI,EAAAA,IAAO,CAAC/C,UAAU,4CACnBxF,EAAAA,EAAAA,KAAA,KACEwF,UAAU,qIACV2C,KAAI,OAAAJ,OAASnC,EAAE,iCAAkC3C,SAEhD2C,EAAE,sCAGP7C,EAAAA,EAAAA,MAAA,MAAIyC,UAAU,qLAAoLvC,SAAA,EAChMjD,EAAAA,EAAAA,KAACwI,EAAAA,IAAU,CAAChD,UAAU,4CACtBxF,EAAAA,EAAAA,KAAA,KAAGwF,UAAU,sHAAsH2C,KAAI,UAAAJ,OAAYnC,EAAE,kCAAmC3C,SACrL2C,EAAE,uCAGP7C,EAAAA,EAAAA,MAAA,MAAIyC,UAAU,qLAAoLvC,SAAA,EAChMjD,EAAAA,EAAAA,KAACyI,EAAAA,IAAQ,CAACjD,UAAU,4CACpBxF,EAAAA,EAAAA,KAAA,KAAGwF,UAAU,yFAAwFvC,SAAE2C,EAAE,yCAG7F,E,wBClBtB,MAAM8C,EAAgBC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,wBAEnB,SAASC,IACtB,MAAM,EAAEjD,IAAM9C,EAAAA,EAAAA,MAEd,OACEC,EAAAA,EAAAA,MAAA2D,EAAAA,SAAA,CAAAzD,SAAA,EACEjD,EAAAA,EAAAA,KAAC8I,EAAAA,EAAQ,CAACnG,UAAWiD,EAAE,4BAA6BhD,gBAAiBgD,EAAE,qCACvE7C,EAAAA,EAAAA,MAACgG,EAAAA,EAAY,CAAA9F,SAAA,EACXjD,EAAAA,EAAAA,KAACgJ,EAAAA,EAAS,CAAC5D,MAAMpF,EAAAA,EAAAA,KAACuI,EAAAA,IAAO,IAAKlD,MAAOO,EAAE,0BACvC5F,EAAAA,EAAAA,KAACiJ,EAAAA,EAAQ,CAACxD,SAAUG,EAAE,iCAExB5F,EAAAA,EAAAA,KAACsI,EAAc,KACftI,EAAAA,EAAAA,KAACkJ,EAAAA,GAAuB,CAACC,aAAcT,EAAczF,UACnDjD,EAAAA,EAAAA,KAAC2F,EAAW,OAEd3F,EAAAA,EAAAA,KAACV,EAAAA,EAAW,MAGlB,C","sources":["components/BgAnimation/BgAnimation.jsx","components/MetaTags/MetaTags.jsx","components/Utility/AnimateElements.jsx","components/Utility/PageTitle.jsx","components/Utility/SubTitle.jsx","components/Utility/WrapperTitle.jsx","components/ContactForm/ContactForm.jsx","components/ContactDetails/ContactDetails.jsx","pages/Contacts.jsx"],"sourcesContent":["// BgAnimation.jsx\nimport React, { useEffect, useState } from 'react';\nimport Particles, { initParticlesEngine } from '@tsparticles/react';\nimport { loadSlim } from '@tsparticles/slim';\n\nconst BgAnimation = () => {\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesOptions = {\n    autoPlay: true,\n\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: 'push',\n        },\n        onHover: {\n          enable: true,\n          mode: 'repulse',\n        },\n        resize: true,\n      },\n      modes: {\n        push: {\n          quantity: 4,\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4,\n        },\n      },\n    },\n\n    particles: {\n      color: {\n        value: '#a2a2a2',\n      },\n      links: {\n        color: '#a2a2a2',\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n      move: {\n        direction: 'none',\n        enable: true,\n        outModes: {\n          default: 'bounce',\n        },\n        random: false,\n        speed: 3,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 800,\n        },\n        value: 100,\n      },\n      opacity: {\n        value: 0.5,\n      },\n      shape: {\n        type: 'circle',\n      },\n      size: {\n        value: { min: 1, max: 5 },\n      },\n      zIndex: {\n        value: 0,\n      },\n    },\n    detectRetina: true,\n  };\n\n  if (!init) return null;\n\n  return <Particles id=\"tsparticles\" options={particlesOptions} />;\n};\n\nexport default BgAnimation;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nconst MetaTags = ({ metaTitle, metaDescription }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <Helmet>\n      <html lang={i18n.language} />\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n    </Helmet>\n  );\n};\n\nexport default MetaTags;\n","import React, { useEffect, useRef } from 'react';\n\nconst AnimateElements = ({ children }) => {\n  const elementsRef = useRef(null);\n\n  useEffect(() => {\n    const elements = elementsRef.current.querySelectorAll('.init-animate-1, .init-animate-2, .init-animate-3, .init-animate-4, .init-animate-5');\n\n    function onEntry(entries) {\n      entries.forEach(entry => {\n        const target = entry.target;\n        if (entry.isIntersecting) {\n          let animateClass;\n          let duration = target.getAttribute('data-time') || '1s';\n          let delay = target.getAttribute('data-delay') || '0s';\n          let delayInMilliseconds = parseFloat(delay) * 1000;\n\n          if (target.classList.contains('init-animate-1')) {\n            animateClass = 'animate-animate-1';\n          } else if (target.classList.contains('init-animate-2')) {\n            animateClass = 'animate-animate-2';\n          } else if (target.classList.contains('init-animate-3')) {\n            animateClass = 'animate-animate-3';\n          } else if (target.classList.contains('init-animate-4')) {\n            animateClass = 'animate-animate-4';\n          } else if (target.classList.contains('init-animate-5')) {\n            animateClass = 'animate-animate-5';\n          }\n\n          if (animateClass) {\n            target.classList.remove('not-animated');\n            target.style.animationDuration = duration;\n\n            setTimeout(() => {\n              target.classList.remove('opacity-0');\n              target.classList.add(animateClass);\n            }, delayInMilliseconds);\n          }\n        }\n      });\n    }\n\n    const observer = new IntersectionObserver(onEntry, {\n      threshold: 0.1,\n      rootMargin: '0px 0px -5% 0px',\n    });\n\n    elements.forEach(element => {\n      element.classList.add('not-animated');\n      observer.observe(element);\n    });\n\n    return () => {\n      elements.forEach(element => observer.unobserve(element));\n    };\n  }, []);\n\n  return <div ref={elementsRef}>{children}</div>;\n};\n\nexport default AnimateElements;\n","import React from 'react';\n\nconst PageTitle = ({ icon, title }) => {\n  const IconComponent = icon\n    ? React.cloneElement(icon, {\n        className: 'text-iconColor dark:text-iconColorDark w-6 h-6',\n      })\n    : null;\n\n  return (\n    <div className=\"sm:w-full flex items-center gap-4\">\n      {IconComponent && <div className=\"animate-iconTitle\">{IconComponent}</div>}\n      <h1 className=\"text-[1.5rem] font-semibold text-black dark:text-white\">{title}</h1>\n    </div>\n  );\n};\nexport default PageTitle;\n","const SubTitle = ({ subTitle }) => {\n  return <h2 className=\"w-full text-[1.25rem] text-black dark:text-white text-center sm:text-right \">{subTitle}</h2>;\n};\nexport default SubTitle;\n","import AnimateElements from '../../components/Utility/AnimateElements';\n\nconst WrapperTitle = ({ children }) => {\n  return (\n    <AnimateElements>\n      <div className=\"relative z-10 flex flex-col lg:flex-row items-center lg:justify-between gap-4 mb-16 after:content-[''] after:absolute after:-bottom-4 after:left-1/2 after:-translate-x-1/2 after:w-full after:h-[2px] after:bg-gray-200 dark:after:bg-sky-600 opacity-0 init-animate-3\">\n        {children}\n      </div>\n    </AnimateElements>\n  );\n};\nexport default WrapperTitle;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport AnimateElements from '../../components/Utility/AnimateElements';\nimport axios from 'axios';\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\nimport { IoIosArrowForward } from 'react-icons/io';\n\nconst ContactForm = () => {\n  const { t } = useTranslation();\n  const { executeRecaptcha } = useGoogleReCaptcha();\n  const [statusMessage, setStatusMessage] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(null);\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(t('contact-form.enter-name')),\n    email: Yup.string().email().required(t('contact-form.enter-email')),\n    subject: Yup.string().required(t('contact-form.enter-message-subject')),\n    message: Yup.string().required(t('contact-form.enter-message')),\n    confirmation_of_conditions: Yup.boolean().required(t('contact-form.confirmation-required')),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (!values.confirmation_of_conditions) {\n      setStatusMessage(t('contact-form.confirmation-required'));\n      setIsSuccess(false);\n      setSubmitting(false);\n      return;\n    }\n\n    if (executeRecaptcha) {\n      const token = await executeRecaptcha('contact_form');\n      values.recaptchaToken = token;\n    }\n\n    axios\n      .post('https://edweb.site/contact-form', values) // Замените на актуальный URL сервера\n      .then(response => {\n        setStatusMessage(t('contact-form.sent-successfully'));\n        setIsSuccess(true);\n        resetForm();\n      })\n      .catch(error => {\n        setStatusMessage(t('contact-form.sent-no-successfully'));\n        setIsSuccess(false);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <>\n      <AnimateElements>\n        <div className=\"relative z-10 md:p-8 bg-white/80 dark:bg-neutral-800/80 w-full lg:w-10/12 mx-auto opacity-0 init-animate-1\">\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              subject: '',\n              message: '',\n              confirmation_of_conditions: '',\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ errors, touched }) => (\n              <Form className=\"w-full\">\n                <div className=\"w-full flex-col lg:flex-row min-h-[18rem] flex gap-4 mb-10\">\n                  <div className=\"w-full lg:w-6/12 flex gap-5 flex-col justify-between\">\n                    <label className=\"flex flex-col gap-2 text-black dark:text-white\">\n                      {t('contact-form.name')}\n                      <Field\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder={t('contact-form.enter-name')}\n                        className={`appearance-none w-full h-14 bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark px-4 rounded-md ${\n                          errors.name && touched.name ? 'error' : ''\n                        }`}\n                      />\n                    </label>\n\n                    <label className=\"flex flex-col gap-2 text-black dark:text-white\">\n                      {t('contact-form.email')}\n                      <Field\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder={t('contact-form.enter-email')}\n                        className={`w-full h-14 bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark px-4 rounded-md ${errors.email && touched.email ? 'error' : ''}`}\n                      />\n                    </label>\n\n                    <label className=\"flex flex-col gap-2 text-black dark:text-white\">\n                      {t('contact-form.message-subject')}\n                      <Field\n                        name=\"subject\"\n                        type=\"text\"\n                        placeholder={t('contact-form.enter-message-subject')}\n                        className={`w-full h-14 bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark px-4 rounded-md ${errors.subject && touched.subject ? 'error' : ''}`}\n                      />\n                    </label>\n                  </div>\n\n                  <div className=\"w-full lg:w-6/12\">\n                    <label className=\"flex flex-col gap-2 h-[20rem] lg:h-full text-black dark:text-white\">\n                      {t('contact-form.message')}\n                      <Field\n                        as=\"textarea\"\n                        name=\"message\"\n                        placeholder={t('contact-form.enter-message')}\n                        className={`w-full h-full  bg-white dark:bg-black border border-colorBorder dark:border-colorBorderDark p-4 rounded-md resize-none ${\n                          errors.message && touched.message ? 'error' : ''\n                        }`}\n                      />\n                    </label>\n                  </div>\n                </div>\n\n                <div className=\"block mb-4\">\n                  <label className=\"lg:inline-flex lg:items-center lg:gap-1 text-black dark:text-white cursor-pointer\">\n                    <Field\n                      type=\"checkbox\"\n                      name=\"confirmation_of_conditions\"\n                      className={`form-checkbox mr-2 cursor-pointer ${errors.confirmation_of_conditions && touched.confirmation_of_conditions ? 'error' : ''}`}\n                    />\n                    <p className=\"accept-form-link\" dangerouslySetInnerHTML={{ __html: t('contact-form.accept-form') }}></p>\n                  </label>\n                </div>\n                <div className=\"mb-10\">\n                  <p className=\"text-xs text-black dark:text-white\">\n                    {t('recaptcha.text-1')}\n                    <a\n                      href=\"https://policies.google.com/privacy\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"font-bold underline duration-200  hover:text-sky-600\"\n                      aria-label={t('recaptcha.privacy-policy')}\n                    >\n                      {t('recaptcha.privacy-policy')}\n                    </a>\n                    {t('recaptcha.text-2')}\n                    <a\n                      href=\"https://policies.google.com/terms\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"font-bold underline duration-200  hover:text-sky-600\"\n                      aria-label={t('recaptcha.terms-of-service')}\n                    >\n                      {t('recaptcha.terms-of-service')}\n                    </a>\n                    {t('recaptcha.text-3')}\n                  </p>\n                </div>\n                {statusMessage && (\n                  <div\n                    className={`flex justify-center items-center text-white text-center font-semibold status-message h-16 sm:h-12 mb-10 rounded-sm ${\n                      isSuccess ? 'bg-gradient-to-r from-green-600 via-green-400 to-green-600' : 'bg-gradient-to-r from-red-600 via-red-400 to-red-600'\n                    }`}\n                  >\n                    {statusMessage}\n                  </div>\n                )}\n\n                <button type=\"submit\" className=\"btn-contact-form group\" title={t('contact-form.send')}>\n                  {t('contact-form.send')}\n                  <IoIosArrowForward className=\"text-sky-600 dark:text-white duration-200 group-hover:translate-x-2\" />\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </AnimateElements>\n    </>\n  );\n};\nexport default ContactForm;\n","import { useTranslation } from 'react-i18next';\nimport { BsPhone, BsEnvelope, BsPinMap } from 'react-icons/bs';\nimport AnimateElements from '../../components/Utility/AnimateElements';\n\nconst ContactDetails = () => {\n  const { t } = useTranslation();\n  return (\n    <AnimateElements>\n      <ul className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-16\">\n        <li className=\"relative z-10 flex justify-start xl:justify-center items-center gap-5 lg:flex-col xl:flex-row bg-white dark:bg-neutral-900 shadow-lg px-10 py-6 lg:py-10 opacity-0 init-animate-1\">\n          <BsPhone className=\"w-8 h-8 text-sky-600 dark:text-sky-500\" />\n          <a\n            className=\"text-[1rem] lg:text-[1.25rem] font-semibold text-center text-textColor dark:text-white transition-all duration-200 hover:underline\"\n            href={`tel:${t('contact-dedails.phone-number')}`}\n          >\n            {t('contact-dedails.phone-number')}\n          </a>\n        </li>\n        <li className=\"relative z-10 flex justify-start xl:justify-center items-center gap-5 lg:flex-col xl:flex-row bg-white dark:bg-neutral-900  shadow-lg px-10 py-6 lg:py-10 opacity-0 init-animate-1\">\n          <BsEnvelope className=\"w-8 h-8 text-sky-600 dark:text-sky-500\" />\n          <a className=\"text-[1rem] lg:text-[1.25rem] font-semibold text-center text-textColor dark:text-white duration-200 hover:underline\" href={`mailto:${t('contact-dedails.email-address')}`}>\n            {t('contact-dedails.email-address')}\n          </a>\n        </li>\n        <li className=\"relative z-10 flex justify-start xl:justify-center items-center gap-5 lg:flex-col xl:flex-row bg-white dark:bg-neutral-900  shadow-lg px-10 py-6 lg:py-10 opacity-0 init-animate-1\">\n          <BsPinMap className=\"w-8 h-8 text-sky-600 dark:text-sky-500\" />\n          <p className=\"text-[1rem] lg:text-[1.25rem] font-semibold text-center text-textColor dark:text-white\">{t('contact-dedails.localization')}</p>\n        </li>\n      </ul>\n    </AnimateElements>\n  );\n};\nexport default ContactDetails;\n","import PageTitle from 'components/Utility/PageTitle';\nimport SubTitle from 'components/Utility/SubTitle';\nimport { useTranslation } from 'react-i18next';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { BsPhone } from 'react-icons/bs';\nimport MetaTags from 'components/MetaTags/MetaTags';\nimport ContactDetails from 'components/ContactDetails/ContactDetails';\nimport WrapperTitle from 'components/Utility/WrapperTitle';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport BgAnimation from 'components/BgAnimation/BgAnimation';\n\nconst RECAPTCHA_KEY = process.env.REACT_APP_RECAPTCHA_KEY;\n\nexport default function ContactPage() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MetaTags metaTitle={t('contacts-page.meta-title')} metaDescription={t('contacts-page.meta-description')} />\n      <WrapperTitle>\n        <PageTitle icon={<BsPhone />} title={t('contacts-page.title')} />\n        <SubTitle subTitle={t('contacts-page.sub-title')} />\n      </WrapperTitle>\n      <ContactDetails />\n      <GoogleReCaptchaProvider reCaptchaKey={RECAPTCHA_KEY}>\n        <ContactForm />\n      </GoogleReCaptchaProvider>\n      <BgAnimation />\n    </>\n  );\n}\n"],"names":["BgAnimation","init","setInit","useState","useEffect","initParticlesEngine","async","loadSlim","engine","then","_jsx","Particles","id","options","autoPlay","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","zIndex","detectRetina","_ref","metaTitle","metaDescription","i18n","useTranslation","_jsxs","Helmet","children","lang","language","name","content","elementsRef","useRef","elements","current","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","target","isIntersecting","animateClass","getAttribute","delay","delayInMilliseconds","parseFloat","classList","contains","remove","style","animationDuration","setTimeout","add","threshold","rootMargin","element","observe","unobserve","ref","icon","title","IconComponent","React","className","subTitle","AnimateElements","ContactForm","t","executeRecaptcha","useGoogleReCaptcha","statusMessage","setStatusMessage","isSuccess","setIsSuccess","validationSchema","Yup","required","email","subject","message","confirmation_of_conditions","_Fragment","Formik","initialValues","onSubmit","values","setSubmitting","resetForm","token","recaptchaToken","axios","post","response","catch","error","finally","_ref2","errors","touched","Form","Field","placeholder","concat","as","dangerouslySetInnerHTML","__html","href","rel","IoIosArrowForward","ContactDetails","BsPhone","BsEnvelope","BsPinMap","RECAPTCHA_KEY","process","REACT_APP_RECAPTCHA_KEY","ContactPage","MetaTags","WrapperTitle","PageTitle","SubTitle","GoogleReCaptchaProvider","reCaptchaKey"],"sourceRoot":""}